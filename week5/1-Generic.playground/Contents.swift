/**
 제네릭
 - 함수나 타입을 정의할 때 구체적인 데이터 타입을 명시하지 않고, 나중에 사용하는 시점에 타입을 지정하는 기능
 - 제네릭을 사용하면 Swift에서 다양한 타입에 대한 유연하고 재사용 가능한 코드를 작성할 수 있음
 - 중복 코드를 줄이고, 명확하고 추상적인 방식으로 코드를 표현 가능
 - 제네릭을 사용하면 하나의 함수, 구조체, 클래스, 열거형 등이 여러 타입에서 작동할 수 있도록 만들 수 있음
 - <> 안에 있는 이름이 범용으로 사용할 타입의 이름이며, 나중에 사용할 때 구체적인 타입이 정해짐
 - Collection Type도 제네릭을 사용하고 있음

 제네릭 제약
 - 제네릭은 모든 타입에 대해 작동할 수 있지만, 특정 조건을 부여하여 제약을 걸 수 있음
 - 특정 프로토콜을 준수하거나, 특정 클래스의 하위 클래스에서만 허용할 수 있음
 */
